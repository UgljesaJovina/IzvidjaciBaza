// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories.DAL;

#nullable disable

namespace Repositories.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230521141954_TecajChangeMigration")]
    partial class TecajChangeMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AkcijaClan", b =>
                {
                    b.Property<Guid>("AkcijeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClanoviId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AkcijeId", "ClanoviId");

                    b.HasIndex("ClanoviId");

                    b.ToTable("AkcijaClan");
                });

            modelBuilder.Entity("ClanClanZnanje", b =>
                {
                    b.Property<Guid>("ClanoviId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ZnanjaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClanoviId", "ZnanjaId");

                    b.HasIndex("ZnanjaId");

                    b.ToTable("ClanClanZnanje");
                });

            modelBuilder.Entity("ClanPosebanProgram", b =>
                {
                    b.Property<Guid>("ClanoviId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PosebniProgramiId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClanoviId", "PosebniProgramiId");

                    b.HasIndex("PosebniProgramiId");

                    b.ToTable("ClanPosebanProgram");
                });

            modelBuilder.Entity("ClanTecaj", b =>
                {
                    b.Property<Guid>("ClanoviId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TecajeviId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClanoviId", "TecajeviId");

                    b.HasIndex("TecajeviId");

                    b.ToTable("ClanTecaj");
                });

            modelBuilder.Entity("Repositories.Models.Akcija", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DatumKraja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumPocetka")
                        .HasColumnType("datetime2");

                    b.Property<string>("MestoOdrzavanja")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid?>("OblikId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TipId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OblikId");

                    b.HasIndex("TipId");

                    b.ToTable("Akcije");
                });

            modelBuilder.Entity("Repositories.Models.Clan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adresa")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<bool>("Aktivan")
                        .HasColumnType("bit");

                    b.Property<string>("BrojKnjizice")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BrojTelefonaR1")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("BrojTelefonaR2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("DatumObecanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumUclanjenja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatumZaveta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ImeRoditelja1")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ImeRoditelja2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("Kategorija")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailR1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailR2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PrezimeRoditelja1")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PrezimeRoditelja2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<Guid?>("VodId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VodId");

                    b.ToTable("Clanovi");
                });

            modelBuilder.Entity("Repositories.Models.ClanFunkcija", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FunkcijaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TrenutnoAktivna")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClanId");

                    b.HasIndex("FunkcijaId");

                    b.ToTable("FunkcijeClanova");
                });

            modelBuilder.Entity("Repositories.Models.ClanZnanje", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Broj")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DatumDobijanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("Znanje")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ClanoviZnanja");
                });

            modelBuilder.Entity("Repositories.Models.Clanarina", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DatumPlacanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("GodinaClanarine")
                        .HasColumnType("int");

                    b.Property<int?>("Iznos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClanId");

                    b.ToTable("Clanarine");
                });

            modelBuilder.Entity("Repositories.Models.Kazna", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DatumDobijanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatumIsteka")
                        .HasColumnType("datetime2");

                    b.Property<string>("DodeljivacKazne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClanId");

                    b.ToTable("Kazne");
                });

            modelBuilder.Entity("Repositories.Models.OblikAkcije", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("ObliciAkcija");
                });

            modelBuilder.Entity("Repositories.Models.OdredskaFunkcija", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("OdredskeFunkcije");
                });

            modelBuilder.Entity("Repositories.Models.Pohvala", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DatumDobijanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("DodeljivacPohvale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClanId");

                    b.ToTable("Pohvale");
                });

            modelBuilder.Entity("Repositories.Models.PosebanProgram", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<int>("Tip")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PosebniProgrami");
                });

            modelBuilder.Entity("Repositories.Models.Tecaj", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DatumKraja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumPocetka")
                        .HasColumnType("datetime2");

                    b.Property<string>("MestoOdrzavanja")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tecajevi");
                });

            modelBuilder.Entity("Repositories.Models.TipAkcije", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("TipoviAkcija");
                });

            modelBuilder.Entity("Repositories.Models.Vod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Kategorija")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Vodovi");
                });

            modelBuilder.Entity("AkcijaClan", b =>
                {
                    b.HasOne("Repositories.Models.Akcija", null)
                        .WithMany()
                        .HasForeignKey("AkcijeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repositories.Models.Clan", null)
                        .WithMany()
                        .HasForeignKey("ClanoviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClanClanZnanje", b =>
                {
                    b.HasOne("Repositories.Models.Clan", null)
                        .WithMany()
                        .HasForeignKey("ClanoviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repositories.Models.ClanZnanje", null)
                        .WithMany()
                        .HasForeignKey("ZnanjaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClanPosebanProgram", b =>
                {
                    b.HasOne("Repositories.Models.Clan", null)
                        .WithMany()
                        .HasForeignKey("ClanoviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repositories.Models.PosebanProgram", null)
                        .WithMany()
                        .HasForeignKey("PosebniProgramiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClanTecaj", b =>
                {
                    b.HasOne("Repositories.Models.Clan", null)
                        .WithMany()
                        .HasForeignKey("ClanoviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repositories.Models.Tecaj", null)
                        .WithMany()
                        .HasForeignKey("TecajeviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Repositories.Models.Akcija", b =>
                {
                    b.HasOne("Repositories.Models.OblikAkcije", "Oblik")
                        .WithMany("Akcije")
                        .HasForeignKey("OblikId");

                    b.HasOne("Repositories.Models.TipAkcije", "Tip")
                        .WithMany("Akcije")
                        .HasForeignKey("TipId");

                    b.Navigation("Oblik");

                    b.Navigation("Tip");
                });

            modelBuilder.Entity("Repositories.Models.Clan", b =>
                {
                    b.HasOne("Repositories.Models.Vod", "Vod")
                        .WithMany("Clanovi")
                        .HasForeignKey("VodId");

                    b.Navigation("Vod");
                });

            modelBuilder.Entity("Repositories.Models.ClanFunkcija", b =>
                {
                    b.HasOne("Repositories.Models.Clan", "Clan")
                        .WithMany("Funkcije")
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repositories.Models.OdredskaFunkcija", "Funkcija")
                        .WithMany("FunkcijeClanova")
                        .HasForeignKey("FunkcijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clan");

                    b.Navigation("Funkcija");
                });

            modelBuilder.Entity("Repositories.Models.Clanarina", b =>
                {
                    b.HasOne("Repositories.Models.Clan", "Clan")
                        .WithMany("PlaceneClanarine")
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clan");
                });

            modelBuilder.Entity("Repositories.Models.Kazna", b =>
                {
                    b.HasOne("Repositories.Models.Clan", "Clan")
                        .WithMany("Kazne")
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clan");
                });

            modelBuilder.Entity("Repositories.Models.Pohvala", b =>
                {
                    b.HasOne("Repositories.Models.Clan", "Clan")
                        .WithMany("Pohvale")
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clan");
                });

            modelBuilder.Entity("Repositories.Models.Clan", b =>
                {
                    b.Navigation("Funkcije");

                    b.Navigation("Kazne");

                    b.Navigation("PlaceneClanarine");

                    b.Navigation("Pohvale");
                });

            modelBuilder.Entity("Repositories.Models.OblikAkcije", b =>
                {
                    b.Navigation("Akcije");
                });

            modelBuilder.Entity("Repositories.Models.OdredskaFunkcija", b =>
                {
                    b.Navigation("FunkcijeClanova");
                });

            modelBuilder.Entity("Repositories.Models.TipAkcije", b =>
                {
                    b.Navigation("Akcije");
                });

            modelBuilder.Entity("Repositories.Models.Vod", b =>
                {
                    b.Navigation("Clanovi");
                });
#pragma warning restore 612, 618
        }
    }
}
